name: CI
on:
  pull_request:
  release:
    types:
      - published

jobs:
  test-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
      - name: Install Zig
        uses: goto-bus-stop/setup-zig@v1
        with:
          version: 0.9.1
      - name: Run simple module test
        run: python test.py
  test-mac-osx:
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
      - name: Install Zig
        uses: goto-bus-stop/setup-zig@v1
        with:
          version: 0.9.1
      - name: Run simple module test
        run: python test.py
  test-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
      - name: Install Zig
        uses: goto-bus-stop/setup-zig@v1
        with:
          version: 0.9.1
      - name: Lint Python files # TODO: get Zig linting working
        uses: pre-commit/action@v2.0.3
      - name: Run simple module test
        run: python test.py
      - name: Run benchmark
        working-directory: ./benchmark
        run: python benchmark.py
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # TODO: build wheels on other platforms
        # os: [ubuntu-20.04, windows-2019, macos-11]
        os: [ ubuntu-20.04 ]
    steps:
      - uses: actions/checkout@v3
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.12.0
      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
  build_sdist:
    needs: [ test-mac-osx, test-windows ]
    name: Make Python source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build SDist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz
  upload_pypi:
    needs: [ build_wheels, build_sdist ]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
